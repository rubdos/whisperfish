# Copy this file to .env

# General Rust config
# Set this if you use racer and don't have it globally
# export RUST_SRC_PATH="${HOME}/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/"
export RUST_BACKTRACE="full"

# Building this project requires the SailfishOS Platform SDK, and MERSDK should be set correctly in the environment.
# Technically, build.rs can source these from the file via dotenv,
# but since dependencies cannot, you should *source this file* before running `cargo build`.

# Path to the platform SDKs, classically /srv/mer/
export MERSDK="/srv/mer/"

# Target should exist in $SDK_ROOT/mersdk/targets/
# Default is SailfishOS-latest, this variable is optional.
export MER_TARGET="SailfishOS-latest"

# Target architecture, should be mirrored in Cargo.toml
export MER_ARCH=armv7hl

# For now, this is also put in the environment.
# After https://github.com/rust-lang/cargo/pull/7811 is in nightly,
# we can generate these flags in build.rs
# We also need RUSTFLAGS for the bundled sqlcipher build:
#   https://gitlab.com/rubdos/whisperfish/-/issues/227
export RUSTFLAGS="-C link-args=-Wl,--sysroot=$MERSDK/targets/$MER_TARGET-$MER_ARCH,-lcrypto,-rpath-link,$MERSDK/targets/$MER_TARGET-$MER_ARCH/usr/lib64/,-rpath-link,$MERSDK/targets/$MER_TARGET-$MER_ARCH/usr/lib/,-rpath-link,$MERSDK/targets/$MER_TARGET-$MER_ARCH/lib/,-rpath-link,$MERSDK/targets/$MER_TARGET-$MER_ARCH/lib64/"

# https://github.com/diwic/dbus-rs/blob/master/libdbus-sys/cross_compile.md
export PKG_CONFIG_SYSROOT_DIR="$MERSDK/targets/$MER_TARGET-$MER_ARCH/"

# If you get compiler errors within C++ standard headers, adding this line may help
#export CXXFLAGS="--sysroot $MERSDK/targets/$MER_TARGET-$MER_ARCH"

# If you want to use the included ./run.sh script,
# set this variable to your hostname or IP address of your SailfishOS device.
export SSH_TARGET=xperia.rubdos.be

# Architecture of the target device when using ./run.sh script
export TARGET_ARCH=armv7-unknown-linux-gnueabihf

# Make run.sh log to a file, set to 1 to enable at your own peril
# as the logfile will contain sensitive information
export WF_RUNSH_LOG_TO_FILE=0

# Overload potential Python virtualenv support in your shell prompt
# export VIRTUAL_ENV=whisperfish
